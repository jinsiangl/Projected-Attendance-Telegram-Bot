from telegram.ext import Application, MessageHandler, Updater, CommandHandler,filters

async def reply(update, context):
    await update.message.reply_text("Hello there!")

import gspread
from oauth2client.service_account import ServiceAccountCredentials

scope = ["https://spreadsheets.google.com/feeds",
         "https://www.googleapis.com/auth/drive"]

creds = ServiceAccountCredentials.from_json_keyfile_name('credentials.json', scope)
client = gspread.authorize(creds)

sheet = client.open("https://docs.google.com/spreadsheets/d/1KE2sJTNXif1KNJot1m6hVhWEOggprIiwh1lj8wqOYLw/edit?usp=sharing").sheet1
sheet_ = client.open("https://docs.google.com/spreadsheets/d/1KE2sJTNXif1KNJot1m6hVhWEOggprIiwh1lj8wqOYLw/edit?usp=sharing").sheet2

def get_data(update, context):
    rows = sheet.get_all_values()
    response = "\n".join([", ".join(row) for row in rows])
    update.message.reply_text(f"📊 Sheet Data:\n{response}")

updater = Updater('8480705082:AAGIbFDs-Z5q7KWT88FjHD-exr9NG5QGvqQ')
dp = updater.dispatcher
dp.add_handler(CommandHandler('sheet', get_data))
updater.start_polling()
updater.idle()

def add_entry(update, context):
    args = context.args
    if len(args) >= 4:
        name, CG, category, date = args[0], args[1], args[2], args[3]
        sheet.append_row([name, CG, category, date])
        update.message.reply_text("✅ New entry added.")
    else:
        update.message.reply_text("❗ Usage: /add JinSiang A1 M 03102025")

dp.add_handler(CommandHandler('add', add_entry))

def edit_cell(update, context):
    args = context.args
    if len(args) == 3:
        row = int(args[0])
        col = int(args[1])
        value = args[2]
        sheet.update_cell(row, col, value)
        update.message.reply_text(f"📝 Updated cell ({row},{col}) to '{value}'")
    else:
        update.message.reply_text("❗ Usage: /edit 2 1 David")

dp.add_handler(CommandHandler('edit', edit_cell))

from apscheduler.schedulers.background import BackgroundScheduler

def daily_report():
    summary = sheet_.row_values()
    bot.send_message(chat_id='YOUR_CHAT_ID', text=f"📅 Daily Report:\n{summary}")

scheduler = BackgroundScheduler()
scheduler.add_job(daily_report, 'cron', hour=8)
scheduler.start()

def main():
    """
    Handles the initial launch of the program (entry point).
    """
    token = ""
    application = Application.builder().token(token).concurrent_updates(True).read_timeout(30).write_timeout(30).build()
    application.add_handler(MessageHandler(filters.TEXT, reply))
    application.add_handler(CommandHandler("hello", reply)) # new command handler here
    print("Telegram Bot started!", flush=True)
    application.run_polling()

if __name__ == '__main__':
    main()



